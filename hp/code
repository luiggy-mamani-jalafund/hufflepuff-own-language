func sprint4Tasks -> List:Task {
  params {}
  return {
    List:Task [
      Task {
        title: "Sound effects",
        description: "As a developer, I want to add sound effects for Pac-Man's actions and interactions with ghosts and special points.",
        state: "DONE",
        members: List:Member [Member {name: "Santiago", role: "Developer"}],
        tag: "Backend",
        subTasks: List:Task [
          Task {
            title: "Sound effects creation",
            description: "As a developer, I want to design and develop specific sound effects for each game action.",
            state: "DONE",
            members: List:Member [Member {name: "Axel", role: "Developer"}],
            tag: "Backend",
            subTasks: List:Task []
          }
        ]
      },
      Task {
        title: "Sound integration testing",
        description: "As a developer, I want to ensure sound effects and background music are correctly integrated with the game.",
        state: "InProgress",
        members: List:Member [Member {name: "Diego", role: "QA Tester"}],
        tag: "QA",
        subTasks: List:Task []
      }
    ]
  }
}

// Create task for background music
func createTaskForBackgroundMusic -> Task {
    params {
        titleTask: StringParagraph,
        descriptionTask: StringParagraph,
        stateTask: State,
        tag: Tag
    }
    return {
        Task {
          title: titleTask,
	        description: descriptionTask,
	        state: stateTask,
	        members: List:Member [Member {name: "Sebas", role: "Developer"}],
	        tag: tag,
	        subTasks: List:Task []
        }
    }
}

// Verify if the task is in progress
func verifiedIfTaskIsInProgress -> Bool {
  params { myTask: Task }
  return {
    if (myTask.tag == "InProgress") then True
    else False
  }
}

// Function execution
do {
  verifiedIfTaskIsInProgress(createTaskForBackgroundMusic(
    "Background music implementation", 
    "As a developer, I want to compose and adapt background music that enhances the gaming experience without being intrusive.", 
    "InProgress", 
    "Backend"
    ))
}